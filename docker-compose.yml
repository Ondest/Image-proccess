services:
  api:
    build:
      context: ./image_app/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - api-static:/app/app/static  
      - ./image_app/:/app
    command: ["poetry", "run", "uvicorn", "app.api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    depends_on:
      - kafka
      - db
      - redis
      - image_proccess_app

  image_proccess_app:
    build:
      context: ./image_process_app/
      dockerfile: Dockerfile
    ports:
      - 10101:10101
    volumes:
      - api-static:/app/static
    command: ["poetry", "run", "python", "main.py"]
    depends_on:
      - redis

  db:
    image: docker.io/postgres:16-alpine
    ports:
      - "5432:5432"
    env_file:
      - ./image_app/.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./docker/initdb:/docker-entrypoint-initdb.d
    depends_on:
      - kafka

  redis:
    image: redis:7.4-alpine
    ports: 
      - "6379:6379"
    depends_on:
      - kafka

  zookeeper:
    image: bitnami/zookeeper:3.8.4
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.8.1
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

volumes:
  api-static: {}
